#  На вход алгоритма подаётся натуральное число N > 143. Алгоритм строит по нему новое число R следующим образом.
# 1. Строится запись числа N в двенадцатеричной системе счисления.
# 2. Далее эта запись обрабатывается по следующему правилу:
#   а) если N делится на 12, то в конец этой записи дописываются три её последние цифры;
#   б) если число N на 12 не делится, то остаток от деления умножается на 3, переводится в двенадцатеричную запись и дописывается в начало числа.
# Полученная таким образом запись является двенадцатеричной записью искомого числа R. Например, для исходного числа 204 = 15012 результатом является число
#  15015012 = 352716, а для исходного числа 275 = 1AB12 это число 291AB12 = 57299. Укажите такое число N, после обработки которого с помощью этого алгоритма
#  получится наибольшее число R, которое меньше 58000. 

alphabet = "0123456789AB"
# print(alphabet[6])
# print(alphabet[12])

def convert(number, system):
    result =  ''
    while number != 0:
        result += alphabet[number % system]
        number = number // system
    return result[::-1]


maxR = 0
bestN = 0

for n in range(143, 1000):
    r = convert(n, 12)
    b = n % 12
    if b == 0:
        r +=  r[-3:]
    else:
        r = convert(b*3, 12) + r


    R = int(r, 12)
    if R < 58000 and R > maxR:
        maxR = R
        bestN = n

print(bestN)
